// Generated from com\gdblab\parser\AlgebraGrammar.g4 by ANTLR 4.7.1
package com.gdblab.parser;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class AlgebraGrammarLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.7.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, LETTER=55, DIGIT=56, SIGN=57, SYMBOL=58, WS=59;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "LETTER", "DIGIT", "SIGN", 
		"SYMBOL", "WS"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'MATCH'", "'='", "'WHERE'", "'('", "')'", "'-['", "']->'", "'<-['", 
		"']'", "'~['", "']~'", "'ALL'", "'PARTITIONS'", "'GROUPS'", "'PATHS'", 
		"'ARBITRARY'", "'SIMPLE'", "'TRAIL'", "'ACYCLIC'", "'SHORTEST'", "'ORDER BY'", 
		"'GROUP BY'", "'PARTITION'", "'GROUP'", "'PATH'", "'PARTITION GROUP'", 
		"'PARTITION PATH'", "'GROUP PATH'", "'PARTITION GROUP PATH'", "'SOURCE'", 
		"'TARGET'", "'LENGTH'", "'SOURCE TARGET'", "'SOURCE LENGTH'", "'TARGET LENGTH'", 
		"'SOURCE TARGET LENGTH'", "'!'", "'^'", "'?'", "'+'", "'*'", "'/'", "'|'", 
		"'{'", "'}'", "'''", "'!='", "'<'", "'>'", "'<='", "'>='", "','", "'AND'", 
		"'OR'", null, null, "':'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "LETTER", "DIGIT", "SIGN", "SYMBOL", 
		"WS"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public AlgebraGrammarLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "AlgebraGrammar.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2=\u01d5\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\3\2\3"+
		"\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\6\3\6\3\7"+
		"\3\7\3\7\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\n\3\n\3\13\3\13\3\13\3\f\3"+
		"\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3"+
		"\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3"+
		"\20\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3"+
		"\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24\3"+
		"\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\25\3\26\3"+
		"\26\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3"+
		"\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\30\3\31\3"+
		"\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3"+
		"\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3"+
		"\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3\35\3"+
		"\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3\36\3"+
		"\36\3\36\3\36\3\37\3\37\3\37\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 "+
		"\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\"\3\""+
		"\3\"\3\"\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3"+
		"$\3$\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3%\3"+
		"%\3%\3%\3%\3%\3%\3&\3&\3\'\3\'\3(\3(\3)\3)\3*\3*\3+\3+\3,\3,\3-\3-\3."+
		"\3.\3/\3/\3\60\3\60\3\60\3\61\3\61\3\62\3\62\3\63\3\63\3\63\3\64\3\64"+
		"\3\64\3\65\3\65\3\66\3\66\3\66\3\66\3\67\3\67\3\67\38\38\39\39\3:\3:\3"+
		";\3;\3<\6<\u01d0\n<\r<\16<\u01d1\3<\3<\2\2=\3\3\5\4\7\5\t\6\13\7\r\b\17"+
		"\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+"+
		"\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+"+
		"U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=\3\2\6\4\2C\\c|\3"+
		"\2\62;\7\2))..\60\60<<??\5\2\13\f\17\17\"\"\2\u01d5\2\3\3\2\2\2\2\5\3"+
		"\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2"+
		"\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3"+
		"\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'"+
		"\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63"+
		"\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2"+
		"?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3"+
		"\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2"+
		"\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2"+
		"e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3"+
		"\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\3y\3\2\2\2\5\177\3\2\2\2\7\u0081"+
		"\3\2\2\2\t\u0087\3\2\2\2\13\u0089\3\2\2\2\r\u008b\3\2\2\2\17\u008e\3\2"+
		"\2\2\21\u0092\3\2\2\2\23\u0096\3\2\2\2\25\u0098\3\2\2\2\27\u009b\3\2\2"+
		"\2\31\u009e\3\2\2\2\33\u00a2\3\2\2\2\35\u00ad\3\2\2\2\37\u00b4\3\2\2\2"+
		"!\u00ba\3\2\2\2#\u00c4\3\2\2\2%\u00cb\3\2\2\2\'\u00d1\3\2\2\2)\u00d9\3"+
		"\2\2\2+\u00e2\3\2\2\2-\u00eb\3\2\2\2/\u00f4\3\2\2\2\61\u00fe\3\2\2\2\63"+
		"\u0104\3\2\2\2\65\u0109\3\2\2\2\67\u0119\3\2\2\29\u0128\3\2\2\2;\u0133"+
		"\3\2\2\2=\u0148\3\2\2\2?\u014f\3\2\2\2A\u0156\3\2\2\2C\u015d\3\2\2\2E"+
		"\u016b\3\2\2\2G\u0179\3\2\2\2I\u0187\3\2\2\2K\u019c\3\2\2\2M\u019e\3\2"+
		"\2\2O\u01a0\3\2\2\2Q\u01a2\3\2\2\2S\u01a4\3\2\2\2U\u01a6\3\2\2\2W\u01a8"+
		"\3\2\2\2Y\u01aa\3\2\2\2[\u01ac\3\2\2\2]\u01ae\3\2\2\2_\u01b0\3\2\2\2a"+
		"\u01b3\3\2\2\2c\u01b5\3\2\2\2e\u01b7\3\2\2\2g\u01ba\3\2\2\2i\u01bd\3\2"+
		"\2\2k\u01bf\3\2\2\2m\u01c3\3\2\2\2o\u01c6\3\2\2\2q\u01c8\3\2\2\2s\u01ca"+
		"\3\2\2\2u\u01cc\3\2\2\2w\u01cf\3\2\2\2yz\7O\2\2z{\7C\2\2{|\7V\2\2|}\7"+
		"E\2\2}~\7J\2\2~\4\3\2\2\2\177\u0080\7?\2\2\u0080\6\3\2\2\2\u0081\u0082"+
		"\7Y\2\2\u0082\u0083\7J\2\2\u0083\u0084\7G\2\2\u0084\u0085\7T\2\2\u0085"+
		"\u0086\7G\2\2\u0086\b\3\2\2\2\u0087\u0088\7*\2\2\u0088\n\3\2\2\2\u0089"+
		"\u008a\7+\2\2\u008a\f\3\2\2\2\u008b\u008c\7/\2\2\u008c\u008d\7]\2\2\u008d"+
		"\16\3\2\2\2\u008e\u008f\7_\2\2\u008f\u0090\7/\2\2\u0090\u0091\7@\2\2\u0091"+
		"\20\3\2\2\2\u0092\u0093\7>\2\2\u0093\u0094\7/\2\2\u0094\u0095\7]\2\2\u0095"+
		"\22\3\2\2\2\u0096\u0097\7_\2\2\u0097\24\3\2\2\2\u0098\u0099\7\u0080\2"+
		"\2\u0099\u009a\7]\2\2\u009a\26\3\2\2\2\u009b\u009c\7_\2\2\u009c\u009d"+
		"\7\u0080\2\2\u009d\30\3\2\2\2\u009e\u009f\7C\2\2\u009f\u00a0\7N\2\2\u00a0"+
		"\u00a1\7N\2\2\u00a1\32\3\2\2\2\u00a2\u00a3\7R\2\2\u00a3\u00a4\7C\2\2\u00a4"+
		"\u00a5\7T\2\2\u00a5\u00a6\7V\2\2\u00a6\u00a7\7K\2\2\u00a7\u00a8\7V\2\2"+
		"\u00a8\u00a9\7K\2\2\u00a9\u00aa\7Q\2\2\u00aa\u00ab\7P\2\2\u00ab\u00ac"+
		"\7U\2\2\u00ac\34\3\2\2\2\u00ad\u00ae\7I\2\2\u00ae\u00af\7T\2\2\u00af\u00b0"+
		"\7Q\2\2\u00b0\u00b1\7W\2\2\u00b1\u00b2\7R\2\2\u00b2\u00b3\7U\2\2\u00b3"+
		"\36\3\2\2\2\u00b4\u00b5\7R\2\2\u00b5\u00b6\7C\2\2\u00b6\u00b7\7V\2\2\u00b7"+
		"\u00b8\7J\2\2\u00b8\u00b9\7U\2\2\u00b9 \3\2\2\2\u00ba\u00bb\7C\2\2\u00bb"+
		"\u00bc\7T\2\2\u00bc\u00bd\7D\2\2\u00bd\u00be\7K\2\2\u00be\u00bf\7V\2\2"+
		"\u00bf\u00c0\7T\2\2\u00c0\u00c1\7C\2\2\u00c1\u00c2\7T\2\2\u00c2\u00c3"+
		"\7[\2\2\u00c3\"\3\2\2\2\u00c4\u00c5\7U\2\2\u00c5\u00c6\7K\2\2\u00c6\u00c7"+
		"\7O\2\2\u00c7\u00c8\7R\2\2\u00c8\u00c9\7N\2\2\u00c9\u00ca\7G\2\2\u00ca"+
		"$\3\2\2\2\u00cb\u00cc\7V\2\2\u00cc\u00cd\7T\2\2\u00cd\u00ce\7C\2\2\u00ce"+
		"\u00cf\7K\2\2\u00cf\u00d0\7N\2\2\u00d0&\3\2\2\2\u00d1\u00d2\7C\2\2\u00d2"+
		"\u00d3\7E\2\2\u00d3\u00d4\7[\2\2\u00d4\u00d5\7E\2\2\u00d5\u00d6\7N\2\2"+
		"\u00d6\u00d7\7K\2\2\u00d7\u00d8\7E\2\2\u00d8(\3\2\2\2\u00d9\u00da\7U\2"+
		"\2\u00da\u00db\7J\2\2\u00db\u00dc\7Q\2\2\u00dc\u00dd\7T\2\2\u00dd\u00de"+
		"\7V\2\2\u00de\u00df\7G\2\2\u00df\u00e0\7U\2\2\u00e0\u00e1\7V\2\2\u00e1"+
		"*\3\2\2\2\u00e2\u00e3\7Q\2\2\u00e3\u00e4\7T\2\2\u00e4\u00e5\7F\2\2\u00e5"+
		"\u00e6\7G\2\2\u00e6\u00e7\7T\2\2\u00e7\u00e8\7\"\2\2\u00e8\u00e9\7D\2"+
		"\2\u00e9\u00ea\7[\2\2\u00ea,\3\2\2\2\u00eb\u00ec\7I\2\2\u00ec\u00ed\7"+
		"T\2\2\u00ed\u00ee\7Q\2\2\u00ee\u00ef\7W\2\2\u00ef\u00f0\7R\2\2\u00f0\u00f1"+
		"\7\"\2\2\u00f1\u00f2\7D\2\2\u00f2\u00f3\7[\2\2\u00f3.\3\2\2\2\u00f4\u00f5"+
		"\7R\2\2\u00f5\u00f6\7C\2\2\u00f6\u00f7\7T\2\2\u00f7\u00f8\7V\2\2\u00f8"+
		"\u00f9\7K\2\2\u00f9\u00fa\7V\2\2\u00fa\u00fb\7K\2\2\u00fb\u00fc\7Q\2\2"+
		"\u00fc\u00fd\7P\2\2\u00fd\60\3\2\2\2\u00fe\u00ff\7I\2\2\u00ff\u0100\7"+
		"T\2\2\u0100\u0101\7Q\2\2\u0101\u0102\7W\2\2\u0102\u0103\7R\2\2\u0103\62"+
		"\3\2\2\2\u0104\u0105\7R\2\2\u0105\u0106\7C\2\2\u0106\u0107\7V\2\2\u0107"+
		"\u0108\7J\2\2\u0108\64\3\2\2\2\u0109\u010a\7R\2\2\u010a\u010b\7C\2\2\u010b"+
		"\u010c\7T\2\2\u010c\u010d\7V\2\2\u010d\u010e\7K\2\2\u010e\u010f\7V\2\2"+
		"\u010f\u0110\7K\2\2\u0110\u0111\7Q\2\2\u0111\u0112\7P\2\2\u0112\u0113"+
		"\7\"\2\2\u0113\u0114\7I\2\2\u0114\u0115\7T\2\2\u0115\u0116\7Q\2\2\u0116"+
		"\u0117\7W\2\2\u0117\u0118\7R\2\2\u0118\66\3\2\2\2\u0119\u011a\7R\2\2\u011a"+
		"\u011b\7C\2\2\u011b\u011c\7T\2\2\u011c\u011d\7V\2\2\u011d\u011e\7K\2\2"+
		"\u011e\u011f\7V\2\2\u011f\u0120\7K\2\2\u0120\u0121\7Q\2\2\u0121\u0122"+
		"\7P\2\2\u0122\u0123\7\"\2\2\u0123\u0124\7R\2\2\u0124\u0125\7C\2\2\u0125"+
		"\u0126\7V\2\2\u0126\u0127\7J\2\2\u01278\3\2\2\2\u0128\u0129\7I\2\2\u0129"+
		"\u012a\7T\2\2\u012a\u012b\7Q\2\2\u012b\u012c\7W\2\2\u012c\u012d\7R\2\2"+
		"\u012d\u012e\7\"\2\2\u012e\u012f\7R\2\2\u012f\u0130\7C\2\2\u0130\u0131"+
		"\7V\2\2\u0131\u0132\7J\2\2\u0132:\3\2\2\2\u0133\u0134\7R\2\2\u0134\u0135"+
		"\7C\2\2\u0135\u0136\7T\2\2\u0136\u0137\7V\2\2\u0137\u0138\7K\2\2\u0138"+
		"\u0139\7V\2\2\u0139\u013a\7K\2\2\u013a\u013b\7Q\2\2\u013b\u013c\7P\2\2"+
		"\u013c\u013d\7\"\2\2\u013d\u013e\7I\2\2\u013e\u013f\7T\2\2\u013f\u0140"+
		"\7Q\2\2\u0140\u0141\7W\2\2\u0141\u0142\7R\2\2\u0142\u0143\7\"\2\2\u0143"+
		"\u0144\7R\2\2\u0144\u0145\7C\2\2\u0145\u0146\7V\2\2\u0146\u0147\7J\2\2"+
		"\u0147<\3\2\2\2\u0148\u0149\7U\2\2\u0149\u014a\7Q\2\2\u014a\u014b\7W\2"+
		"\2\u014b\u014c\7T\2\2\u014c\u014d\7E\2\2\u014d\u014e\7G\2\2\u014e>\3\2"+
		"\2\2\u014f\u0150\7V\2\2\u0150\u0151\7C\2\2\u0151\u0152\7T\2\2\u0152\u0153"+
		"\7I\2\2\u0153\u0154\7G\2\2\u0154\u0155\7V\2\2\u0155@\3\2\2\2\u0156\u0157"+
		"\7N\2\2\u0157\u0158\7G\2\2\u0158\u0159\7P\2\2\u0159\u015a\7I\2\2\u015a"+
		"\u015b\7V\2\2\u015b\u015c\7J\2\2\u015cB\3\2\2\2\u015d\u015e\7U\2\2\u015e"+
		"\u015f\7Q\2\2\u015f\u0160\7W\2\2\u0160\u0161\7T\2\2\u0161\u0162\7E\2\2"+
		"\u0162\u0163\7G\2\2\u0163\u0164\7\"\2\2\u0164\u0165\7V\2\2\u0165\u0166"+
		"\7C\2\2\u0166\u0167\7T\2\2\u0167\u0168\7I\2\2\u0168\u0169\7G\2\2\u0169"+
		"\u016a\7V\2\2\u016aD\3\2\2\2\u016b\u016c\7U\2\2\u016c\u016d\7Q\2\2\u016d"+
		"\u016e\7W\2\2\u016e\u016f\7T\2\2\u016f\u0170\7E\2\2\u0170\u0171\7G\2\2"+
		"\u0171\u0172\7\"\2\2\u0172\u0173\7N\2\2\u0173\u0174\7G\2\2\u0174\u0175"+
		"\7P\2\2\u0175\u0176\7I\2\2\u0176\u0177\7V\2\2\u0177\u0178\7J\2\2\u0178"+
		"F\3\2\2\2\u0179\u017a\7V\2\2\u017a\u017b\7C\2\2\u017b\u017c\7T\2\2\u017c"+
		"\u017d\7I\2\2\u017d\u017e\7G\2\2\u017e\u017f\7V\2\2\u017f\u0180\7\"\2"+
		"\2\u0180\u0181\7N\2\2\u0181\u0182\7G\2\2\u0182\u0183\7P\2\2\u0183\u0184"+
		"\7I\2\2\u0184\u0185\7V\2\2\u0185\u0186\7J\2\2\u0186H\3\2\2\2\u0187\u0188"+
		"\7U\2\2\u0188\u0189\7Q\2\2\u0189\u018a\7W\2\2\u018a\u018b\7T\2\2\u018b"+
		"\u018c\7E\2\2\u018c\u018d\7G\2\2\u018d\u018e\7\"\2\2\u018e\u018f\7V\2"+
		"\2\u018f\u0190\7C\2\2\u0190\u0191\7T\2\2\u0191\u0192\7I\2\2\u0192\u0193"+
		"\7G\2\2\u0193\u0194\7V\2\2\u0194\u0195\7\"\2\2\u0195\u0196\7N\2\2\u0196"+
		"\u0197\7G\2\2\u0197\u0198\7P\2\2\u0198\u0199\7I\2\2\u0199\u019a\7V\2\2"+
		"\u019a\u019b\7J\2\2\u019bJ\3\2\2\2\u019c\u019d\7#\2\2\u019dL\3\2\2\2\u019e"+
		"\u019f\7`\2\2\u019fN\3\2\2\2\u01a0\u01a1\7A\2\2\u01a1P\3\2\2\2\u01a2\u01a3"+
		"\7-\2\2\u01a3R\3\2\2\2\u01a4\u01a5\7,\2\2\u01a5T\3\2\2\2\u01a6\u01a7\7"+
		"\61\2\2\u01a7V\3\2\2\2\u01a8\u01a9\7~\2\2\u01a9X\3\2\2\2\u01aa\u01ab\7"+
		"}\2\2\u01abZ\3\2\2\2\u01ac\u01ad\7\177\2\2\u01ad\\\3\2\2\2\u01ae\u01af"+
		"\7)\2\2\u01af^\3\2\2\2\u01b0\u01b1\7#\2\2\u01b1\u01b2\7?\2\2\u01b2`\3"+
		"\2\2\2\u01b3\u01b4\7>\2\2\u01b4b\3\2\2\2\u01b5\u01b6\7@\2\2\u01b6d\3\2"+
		"\2\2\u01b7\u01b8\7>\2\2\u01b8\u01b9\7?\2\2\u01b9f\3\2\2\2\u01ba\u01bb"+
		"\7@\2\2\u01bb\u01bc\7?\2\2\u01bch\3\2\2\2\u01bd\u01be\7.\2\2\u01bej\3"+
		"\2\2\2\u01bf\u01c0\7C\2\2\u01c0\u01c1\7P\2\2\u01c1\u01c2\7F\2\2\u01c2"+
		"l\3\2\2\2\u01c3\u01c4\7Q\2\2\u01c4\u01c5\7T\2\2\u01c5n\3\2\2\2\u01c6\u01c7"+
		"\t\2\2\2\u01c7p\3\2\2\2\u01c8\u01c9\t\3\2\2\u01c9r\3\2\2\2\u01ca\u01cb"+
		"\7<\2\2\u01cbt\3\2\2\2\u01cc\u01cd\t\4\2\2\u01cdv\3\2\2\2\u01ce\u01d0"+
		"\t\5\2\2\u01cf\u01ce\3\2\2\2\u01d0\u01d1\3\2\2\2\u01d1\u01cf\3\2\2\2\u01d1"+
		"\u01d2\3\2\2\2\u01d2\u01d3\3\2\2\2\u01d3\u01d4\b<\2\2\u01d4x\3\2\2\2\4"+
		"\2\u01d1\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}